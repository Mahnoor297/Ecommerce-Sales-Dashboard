-- 1.1 Create the Database
CREATE DATABASE ecommerce_db;
USE ecommerce_db;

-- 1.2 Create Tables
CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(100),
    email VARCHAR(100),
    country VARCHAR(50)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(100),
    category VARCHAR(50),
    price DECIMAL(10, 2)
);

CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);

CREATE TABLE order_items (
    item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);

-- 2 Insert Sample Data
INSERT INTO customers VALUES
(1, 'Ayesha Khan', 'ayesha@gmail.com', 'Pakistan'),
(2, 'John Smith', 'john.smith@yahoo.com', 'USA'),
(3, 'Fatima Noor', 'fatima@gmail.com', 'Pakistan'),
(4, 'Liam Lee', 'liam.lee@outlook.com', 'UK'),
(5, 'Sara Malik', 'sara.malik@gmail.com', 'Pakistan');

INSERT INTO products VALUES
(101, 'Laptop', 'Electronics', 800.00),
(102, 'Smartphone', 'Electronics', 500.00),
(103, 'Desk Chair', 'Furniture', 120.00),
(104, 'Headphones', 'Electronics', 75.00),
(105, 'Office Desk', 'Furniture', 300.00);

INSERT INTO orders VALUES
(1001, 1, '2024-12-01'),
(1002, 2, '2024-12-05'),
(1003, 3, '2024-12-08'),
(1004, 1, '2025-01-02'),
(1005, 5, '2025-01-15');

INSERT INTO order_items VALUES
(1, 1001, 101, 1),   -- Ayesha bought 1 Laptop
(2, 1001, 104, 2),   -- Ayesha bought 2 Headphones
(3, 1002, 102, 1),   -- John bought 1 Smartphone
(4, 1003, 103, 1),   -- Fatima bought 1 Chair
(5, 1004, 105, 1),   -- Ayesha bought 1 Desk
(6, 1005, 102, 2),   -- Sara bought 2 Smartphones
(7, 1005, 104, 1);   -- Sara bought 1 Headphone


-- Step 1: Find the total revenue generated from all sales
select sum(oi.quantity*p.price) as total_revenue
from products p
join order_items oi
on p.product_id=oi.product_id;

-- Step 2: Find revenue generated by each product category, sorted from highest to lowest
select category, sum(oi.quantity*p.price) as revenue
from products p
join order_items oi
on p.product_id=oi.product_id
group by p.category
order by revenue desc;

-- Step 3: Find the top 3 customers who spent the most
select c.name as customer, sum(oi.quantity*p.price) as spending
from customers c
join orders o
on c.customer_id=o.customer_id
join order_items oi
on o.order_id=oi.order_id
join products p
on oi.product_id=p.product_id
group by customer
order by spending desc
limit 3;

-- Step 4: Find the total number of orders placed per month
select count(order_id), monthname(order_date) as order_month
from orders
group by order_month, month(order_date)
order by month(order_date);

-- Step 5: Top-Selling Product by Quantity Sold
Select p.product_name, sum(oi.quantity) as quantity_sold
from products p
join order_items oi
on p.product_id=oi.product_id
group by product_name
order by quantity_sold desc
limit 1;

-- Step 6: Top Region by Revenue
Select c.country as region, sum(oi.quantity*p.price) as revenue
from customers c
join orders o
on c.customer_id=o.customer_id
join order_items oi
on o.order_id=oi.order_id
join products p
on oi.product_id=p.product_id
group by region
order by revenue desc;

-- Step 7: KPIs Summary
-- 7.1 Total Revenue
Select sum(oi.quantity*p.price) as total_revenue
from order_items oi
join products p
on oi.product_id=p.product_id;
-- 7.2 Total Orders
Select count(distinct(order_id)) as total_orders from order_items;
-- Step 7.3: Total Customers
Select count(distinct(customer_id)) as total_customers from orders;